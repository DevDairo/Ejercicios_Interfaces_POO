
import java.awt.CardLayout;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 *
 * @author Dairo Montiel
 */
public class PanelIMC extends javax.swing.JPanel {

    private JPanel panelContenedor;
    private CardLayout cardLayout;

    public PanelIMC(JPanel panelContenedor, CardLayout cardLayout) {
        initComponents();

        this.panelContenedor = panelContenedor;
        this.cardLayout = cardLayout;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        atras = new javax.swing.JButton();
        calcular = new javax.swing.JButton();
        peso = new javax.swing.JTextField();
        estatura = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 255));

        atras.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        atras.setText("REGRESAR");
        atras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atrasActionPerformed(evt);
            }
        });

        calcular.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        calcular.setText("CALCULAR");
        calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularActionPerformed(evt);
            }
        });

        peso.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N

        estatura.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        jLabel1.setText("Calculadora de IMC (Índice de Masa Corporal)");

        jLabel2.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        jLabel2.setText("Ingrese su peso");

        jLabel3.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        jLabel3.setText("Ingrese su estatura");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(peso, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(estatura, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(atras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(calcular)))
                .addContainerGap(130, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(peso, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(estatura, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atras)
                    .addComponent(calcular))
                .addGap(97, 97, 97))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void atrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atrasActionPerformed
        cardLayout.show(panelContenedor, "menu");
    }//GEN-LAST:event_atrasActionPerformed

    private void calcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcularActionPerformed

        //Variables auxiliares.
        double kg, cm, imc;

        try {

            // Obtenemos los datos ingresados
            kg = Double.parseDouble(peso.getText());
            cm = Double.parseDouble(estatura.getText());

            // Calculamos el IMC = peso / estatura²
            imc = kg / Math.pow(cm, 2);
            /*
        Rangos de IMC según la OMS (adultos):
        < 18.5 =Bajo peso, 18.5 – 24.9 =Peso normal, 25 – 29.9 =Sobrepeso, 30 – 34.9 =Obesidad grado I, 35 – 39.9 =Obesidad grado II y ≥ 40 =Obesidad grado III (mórbida). 
       Se utiliza if anidado y una variable auxiliar para determinar la clasificación segun lo estable la OMS*/

            String clasificacion;
            if (imc <= 0) {
                JOptionPane.showMessageDialog(
                        this,
                        "El Peso o Altura ingresado es menor a 0, intente nuevamente", "Error", JOptionPane.ERROR_MESSAGE
                );
                return; //En caso de que algun valor ingresado sea negativo, detiene el proceso y muestra un panel.
            } else {
                if (imc < 18.5) {
                    clasificacion = "Bajo peso";
                } else {
                    if (imc < 25) {
                        clasificacion = "Peso normal";

                    } else {
                        if (imc < 35) {
                            clasificacion = "Obesidad grado I";
                        } else {
                            if (imc < 40) {
                                clasificacion = "Obesidad grado II";
                            } else {
                                clasificacion = "Obesidad grado III (Morbida)";
                            }
                        }
                    }
                }

            }

            // Mostramos el resultado con clasificación y un numero determinado de decimales.
            DecimalFormat df = new DecimalFormat("#.###");
            JOptionPane.showMessageDialog(
                    this,
                    "Su IMC es: " + df.format(imc) + "\n Clasificación: " + clasificacion,
                    "Resultado",
                    JOptionPane.INFORMATION_MESSAGE
            );

        } catch (NumberFormatException e) {

            // Si el usuario escribe letras o coma, lanza un pop up.
            JOptionPane.showMessageDialog(
                    this,
                    "Por favor ingrese solo números válidos (Use punto para decimales).",
                    "Error de entrada",
                    JOptionPane.WARNING_MESSAGE
            );

        }

    }//GEN-LAST:event_calcularActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atras;
    private javax.swing.JButton calcular;
    private javax.swing.JTextField estatura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField peso;
    // End of variables declaration//GEN-END:variables
}
